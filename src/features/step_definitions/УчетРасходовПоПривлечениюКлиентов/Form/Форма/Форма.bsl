//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПодготавливаюДокументСНомеромДокументов(Парам01,Парам02)","ЯПодготавливаюДокументСНомеромДокументов","Допустим я подготавливаю документ с номером ""000000000"" документов ""Покупки""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"КогдаЯСоздаюПокупку()","КогдаЯСоздаюПокупку","Когда когда я создаю покупку");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюШапкуДокумента()","ЯЗаполняюШапкуДокумента","И Я заполняю шапку документа");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыбираюАкции()","ЯВыбираюАкции","И Я выбираю акции");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПровожуДокумент()","ЯПровожуДокумент","И Я провожу документ");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"РезультатПроведенияКорректен()","РезультатПроведенияКорректен","Тогда результат проведения корректен");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим я подготавливаю документ с номером "000000000" документов "Покупка"
//@ЯПодготавливаюДокументСНомеромДокументов(Парам01,Парам02)
Процедура ЯПодготавливаюДокументСНомеромДокументов(НомерДокумента, ПредставлениеДокументов) Экспорт
	ДокументСсылка = утвПолучитьДокументПоНомеруИПредставлению(ПредставлениеДокументов, НомерДокумента);

	СделатьДокументНепроведеннымИОчиститьАкции(ДокументСсылка);

	ЗагрузитьFixtureИзМакета("Акции");
	ЗагрузитьFixtureИзМакета("Покупка");
КонецПроцедуры

&НаКлиенте
//Когда когда я создаю покупку
//@КогдаЯСоздаюПокупку()
Процедура КогдаЯСоздаюПокупку() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И Я заполняю шапку документа
//@ЯЗаполняюШапкуДокумента()
Процедура ЯЗаполняюШапкуДокумента() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И Я выбираю акции
//@ЯВыбираюАкции()
Процедура ЯВыбираюАкции() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И Я провожу документ
//@ЯПровожуДокумент()
Процедура ЯПровожуДокумент() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда результат проведения корректен
//@РезультатПроведенияКорректен()
Процедура РезультатПроведенияКорректен() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//////////////////////////////////////////////////

&НаСервере
Функция утвПолучитьДокументПоНомеруИПредставлению(ИмяДокумента, Номер)
	Если ПустаяСтрока(Номер) Тогда
		ВызватьИсключение "Не заполнено свойство поиска";
	Иначе
		ПредставлениеПоиска = "номеру """ + Номер + """";
	КонецЕсли;

	ТекстИсключения = "Не нашли документ #ИмяДокумента по #ПредставлениеПоиска";
	ТекстИсключения = СтрЗаменить(ТекстИсключения, "#ИмяДокумента", ИмяДокумента);
	ТекстИсключения = СтрЗаменить(ТекстИсключения, "#ПредставлениеПоиска", ПредставлениеПоиска);

	Результат = Документы[ИмяДокумента].НайтиПоНомеру(Номер);
	Если Результат = Документы[ИмяДокумента].ПустаяСсылка() Тогда ВызватьИсключение ТекстИсключения; КонецЕсли;

	Возврат Результат;
КонецФункции

&НаСервере
Процедура СделатьДокументНепроведеннымИОчиститьАкции(ДокументСсылка)
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	ДокументОбъект.ЗатратыНаАкции.Очистить();
	ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПутьКФайлуОтносительноКаталогаFeatures(ИмяФайлаСРасширением)
	ПутьКФайлу = "";

	СостояниеVanessaBehavior = Ванесса.ПолучитьСостояниеVanessaBehavior();

	ПутьКТекущемуFeatuteФайлу = СостояниеVanessaBehavior.ТекущаяФича.ПолныйПуть;

	ПутьКФайлу = Лев(ПутьКТекущемуFeatuteФайлу, СтрНайти(ПутьКТекущемуFeatuteФайлу, "features") - 1) + ИмяФайлаСРасширением;

	Возврат ПутьКФайлу;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакета(ИмяМакета)
	Ванесса.ЗапретитьВыполнениеШагов();

	НачальноеИмяФайла = ПолучитьПутьКФайлуОтносительноКаталогаFeatures("tools\Выгрузка и загрузка данных XML.epf");

	Адрес = "";

	НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьFixtureИзМакетаЗавершение", ЭтотОбъект, ИмяМакета), Адрес, НачальноеИмяФайла, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакетаЗавершение(УдалосьПоместитьФайл, Адрес, ВыбранноеИмяФайла, ИмяМакета) Экспорт
	ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета);

	Ванесса.ПродолжитьВыполнениеШагов();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();

	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);

	ВнешняяОбработка = ВнешниеОбработки.Создать(ИмяВременногоФайла, Ложь);

	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();

	Текст = РеквизитФормыВЗначение("Объект").ПолучитьМакет(ИмяМакета).ПолучитьТекст();

	ВременныйДокумент = Новый ТекстовыйДокумент;
	ВременныйДокумент.УстановитьТекст(Текст);
	ВременныйДокумент.Записать(ИмяВременногоФайла, КодировкаТекста.UTF8);

	ВнешняяОбработка.ВыполнитьЗагрузку(ИмяВременногоФайла);
КонецПроцедуры

//окончание текста модуля